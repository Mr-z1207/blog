(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{369:function(a,v,t){"use strict";t.r(v);var _=t(10),s=Object(_.a)({},(function(){var a=this,v=a.$createElement,t=a._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"初识java"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初识java"}},[a._v("#")]),a._v(" 初识Java")]),a._v(" "),t("p",[a._v("从零开始学Java")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),t("p",[a._v("以下内容来自廖雪峰的官方网站Java教程自学记录")])]),a._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#java简介"}},[a._v("Java简介")])]),t("li",[t("a",{attrs:{href:"#推荐的学习路线"}},[a._v("推荐的学习路线")])]),t("li",[t("a",{attrs:{href:"#安装环境"}},[a._v("安装环境")]),t("ul",[t("li",[t("a",{attrs:{href:"#什么是jdk"}},[a._v("什么是JDK")])]),t("li",[t("a",{attrs:{href:"#设置环境变量"}},[a._v("设置环境变量")])]),t("li",[t("a",{attrs:{href:"#jdk的其他可执行文件"}},[a._v("JDK的其他可执行文件")])])])])])]),t("p"),a._v(" "),t("h2",{attrs:{id:"java简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java简介"}},[a._v("#")]),a._v(" Java简介")]),a._v(" "),t("p",[a._v("Java介于编译型语言和解释型语言之间。编译型语言如C、C++，代码是直接编译成机器码执行，但是不同的平台（x86、ARM等）CPU的指令集不同，因此，需要编译出每一种平台的对应机器码。解释型语言如Python、Ruby没有这个问题，可以由解释器直接加载源码然后运行，代价是运行效率太低。而Java是将代码编译成一种“字节码”，它类似于抽象的CPU指令，然后，针对不同平台编写虚拟机，不同平台的虚拟机负责加载字节码并执行，这样就实现了“一次编写，到处运行”的效果。当然，这是针对Java开发者而言。对于虚拟机，需要为每个平台分别开发。为了保证不同平台、不同公司开发的虚拟机都能正确执行Java字节码，SUN公司制定了一系列的Java虚拟机规范。从实践的角度看，JVM的兼容性做得非常好，低版本的Java字节码完全可以正常运行在高版本的JVM上。")]),a._v(" "),t("ul",[t("li",[a._v("随着Java的发展，SUN给Java又分出了三个不同版本：\n"),t("ul",[t("li",[a._v("Java SE：Standard Edition")]),a._v(" "),t("li",[a._v("Java EE：Enterprise Edition")]),a._v(" "),t("li",[a._v("Java ME：Micro Edition")])])])]),a._v(" "),t("p",[a._v("简单来说，Java SE就是标准版，包含标准的JVM和标准库，而Java EE是企业版，它只是在Java SE的基础上加上了大量的API和库，以便方便开发Web应用、数据库、消息服务等，Java EE的应用使用的虚拟机和Java SE完全相同。Java ME就和Java SE不同，它是一个针对嵌入式设备的“瘦身版”，Java SE的标准库无法在Java ME上使用，Java ME的虚拟机也是“瘦身版”。")]),a._v(" "),t("h2",{attrs:{id:"推荐的学习路线"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推荐的学习路线"}},[a._v("#")]),a._v(" 推荐的学习路线")]),a._v(" "),t("ol",[t("li",[a._v("首先要学习Java SE，掌握Java语言本身、Java核心开发技术以及Java标准库的使用；")]),a._v(" "),t("li",[a._v("如果继续学习Java EE，那么Spring框架、数据库开发、分布式架构就是需要学习的；")]),a._v(" "),t("li",[a._v("如果要学习大数据开发，那么Hadoop、Spark、Flink这些大数据平台就是需要学习的，他们都基于Java或Scala开发；")]),a._v(" "),t("li",[a._v("如果想要学习移动开发，那么就深入Android平台，掌握Android App开发。")])]),a._v(" "),t("h2",{attrs:{id:"安装环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装环境"}},[a._v("#")]),a._v(" 安装环境")]),a._v(" "),t("h3",{attrs:{id:"什么是jdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是jdk"}},[a._v("#")]),a._v(" 什么是JDK")]),a._v(" "),t("p",[a._v("初学者学Java，经常听到JDK、JRE这些名词，它们到底是啥？")]),a._v(" "),t("ul",[t("li",[a._v("JDK：Java Development Kit")]),a._v(" "),t("li",[a._v("JRE：Java Runtime Environment")])]),a._v(" "),t("p",[a._v("简单地说，JRE就是运行Java字节码的虚拟机。但是，如果只有Java源码，要编译成Java字节码，就需要JDK，因为JDK除了包含JRE，还提供了编译器、调试器等开发工具。")]),a._v(" "),t("p",[a._v("因为Java程序必须运行在JVM之上，所以，我们第一件事情就是安装JDK。\n确保从Oracle的官网下载最新的稳定版JDK")]),a._v(" "),t("h3",{attrs:{id:"设置环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置环境变量"}},[a._v("#")]),a._v(" 设置环境变量")]),a._v(" "),t("ol",[t("li",[a._v("安装完JDK后，需要设置一个"),t("code",[a._v("JAVA_HOME")]),a._v("的环境变量，它指向JDK的安装目录。在Windows下，它是安装目录通常是"),t("code",[a._v("C:\\Program Files\\Java\\jdk-15")])]),a._v(" "),t("li",[a._v("然后，把"),t("code",[a._v("JAVA_HOME")]),a._v("的"),t("code",[a._v("bin")]),a._v("目录附加到系统环境变量"),t("code",[a._v("PATH")]),a._v("上。在Windows下，它长这样："),t("code",[a._v("%JAVA_HOME%\\bin")])]),a._v(" "),t("li",[a._v("把"),t("code",[a._v("JAVA_HOME")]),a._v("的"),t("code",[a._v("bin")]),a._v("目录添加到"),t("code",[a._v("PATH")]),a._v("中是为了在任意文件夹下都可以运行java。打开命令提示符窗口，输入命令"),t("code",[a._v("java -version")]),a._v("，如果一切正常就会显示")])]),a._v(" "),t("div",{staticClass:"language-cmd line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('C:\\> java -version\njava version "15" ...\nJava(TM) SE Runtime Environment\nJava HotSpot(TM) 64-Bit Server VM\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("h3",{attrs:{id:"jdk的其他可执行文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jdk的其他可执行文件"}},[a._v("#")]),a._v(" JDK的其他可执行文件")]),a._v(" "),t("p",[a._v("在"),t("code",[a._v("JAVA_HOME")]),a._v("的"),t("code",[a._v("bin")]),a._v("目录下还有很多可执行文件")]),a._v(" "),t("ul",[t("li",[a._v("java：这个可执行程序其实就是JVM，运行Java程序，就是启动JVM，然后让JVM执行指定的编译后的代码；")]),a._v(" "),t("li",[a._v("javac：这是Java的编译器，它用于把Java源码文件（以.java后缀结尾）编译为Java字节码文件（以.class后缀结尾）；")]),a._v(" "),t("li",[a._v("jar：用于把一组.class文件打包成一个.jar文件，便于发布；")]),a._v(" "),t("li",[a._v("javadoc：用于从Java源码中自动提取注释并生成文档；")]),a._v(" "),t("li",[a._v("jdb：Java调试器，用于开发阶段的运行调试。")])])])}),[],!1,null,null,null);v.default=s.exports}}]);